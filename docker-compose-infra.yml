---
version: '2.4'

volumes:
  prometheus_metrics:
    driver: local
    driver_opts:
      device: $PWD/data/prometheus/metrics
      o: bind
  prometheus_etc:
    driver: local
    driver_opts:
      device: $PWD/data/prometheus/etc
      o: bind
  promvm_data:
    driver: local
    driver_opts:
      device: $PWD/data/promvm
      o: bind
  promgrafana_etc:
    driver: local
    driver_opts:
      device: $PWD/data/promgrafana/etc
      o: bind
  promgrafana_db:
    driver: local
    driver_opts:
      device: $PWD/data/promgrafana/db
      o: bind
  promgrafana_plugins:
    driver: local
    driver_opts:
      device: $PWD/data/promgrafana/plugins
      o: bind
  promgrafana_dashboards:
    driver: local
    driver_opts:
      device: $PWD/data/promgrafana/etc/dashboards
      o: bind

  alertmanager_etc:
    driver: local
    driver_opts:
      device: $PWD/data/alertmanager/etc
      o: bind
  sentryredis_data:
    driver: local
    driver_opts:
      device: $PWD/data/sentry/redis
      o: bind
  sentrypostgres_data:
    driver: local
    driver_opts:
      device: $PWD/data/sentry/pg
      o: bind


services:

  prom:
    image: prom/prometheus:v2.11.1
    restart: always
    hostname: prom
    volumes:
      - prometheus_etc:/etc/prometheus
      - prometheus_metrics:/prometheus-data
    command: >
        --config.file=/etc/prometheus/prometheus.yml
        --storage.tsdb.path=/prometheus-data
        --storage.tsdb.retention.time=12h
        --web.external-url=https://prom:9090
        --query.max-concurrency=40
        --query.timeout=20s
    ports:
      - "9090:9090"
    labels:
      - traefik.enable=false

  promgrafana:
    image: grafana/grafana:6.3.6
    restart: always
    hostname: prometheusgrafana
    volumes:
      - promgrafana_etc/:/etc/grafana
      - promgrafana_db:/var/lib/grafana/
      - promgrafana_plugins:/var/lib/grafana/plugins
      - promgrafana_dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    depends_on:
      - prom
    environment:
      GF_SERVER_ROOT_URL: https://promgrafana
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_INSTALL_PLUGINS: grafana-simple-json-datasource,
                          vertamedia-clickhouse-datasource
    labels:
      - traefik.enable=false

  promvm:
    container_name: vm
    hostname: vm
    restart: always
    image: victoriametrics/victoria-metrics:v1.32.8
    volumes:
      - promvm_data:/storage
    labels:
      - traefik.enable=false
    command: >
        -storageDataPath=/storage
        -retentionPeriod=3
        -httpListenAddr=:8428

  promclickhouse:
    image: f1yegor/clickhouse-exporter
    restart: always
    command: -scrape_uri=http://default:@clickhouse:8123/
    labels:
      - traefik.enable=false

  # read ./data/alertmanager/etc/Readme.md before start container
  alertmanager:
    image: prom/alertmanager:latest
    restart: always
    hostname: alertmanager
    volumes:
      - alertmanager_etc:/etc/alertmanager
    ports:
      - "9093:9093"
    command: >
        --config.file=/etc/alertmanager/alertmanager.conf
        --log.level=info
    labels:
      - traefik.enable=false

  prommongo:
    image: eses/mongodb_exporter
    restart: always
    hostname: prommongo
    command: >
        -mongodb.uri=mongodb://noc:noc@mongo:27017
    labels:
      - traefik.enable=false

  sentry-redis:
    image: redis:alpine
    restart: always
    volumes:
      - sentryredis_data:/data
    labels:
      - traefik.enable=false

  sentry-postgres:
    image: postgres:9.6-alpine
    restart: always
    env_file:
      - ./data/sentry/sentry.env
    volumes:
      - sentrypostgres_data:/var/lib/postgresql/data
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    labels:
      - traefik.enable=false

  # after firsh start need run "docker exec -ti noc-dc_sentry_1 sentry upgrade"
  # for run migration and setup admin user\passwd
  sentry:
    image: sentry
    restart: always
    links:
      - sentry-redis
      - sentry-postgres
    command: "sentry run web -w 4"
    ports:
      - "9000:9000"
    env_file:
      - ./data/sentry/sentry.env
    labels:
      - traefik.enable=false
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000

  sentry-cron:
    image: sentry
    restart: always
    links:
      - sentry-redis
      - sentry-postgres
    command: "sentry run cron"
    env_file:
      - ./data/sentry/sentry.env
    labels:
      - traefik.enable=false

  sentry-worker:
    image: sentry
    restart: always
    links:
      - sentry-redis
      - sentry-postgres
    command: "sentry run worker"
    env_file:
      - ./data/sentry/sentry.env
    labels:
      - traefik.enable=false
